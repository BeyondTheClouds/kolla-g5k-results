---
# Note: this playbook relies on `xps` variable. The `xps` variable is
# a list that contains the name of all experimentation. For instance,
# this list is as following for the idle experimentation.
# - idle-cpt20-nfk05
# - idle-cpt20-nfk10
# - idle-cpt20-nfk25
# - idle-cpt20-nfk50
- hosts: all
  tasks:
  - name: The list of experimentation
    debug: var=xps

  - name: Making the results and archives directories
    file: path=/results/archives state=directory

  - name: Getting results from home and put them into /results/archives
    command: "cp /home/{{ item }}.tar.gz /results/archives/"
    args:
      creates: "/results/archives/{{ item }}.tar.gz"
    with_items: "{{ xps }}"

  - name: Extracting experimentation results
    command: "tar -C /results -xzf /results/archives/{{ item }}.tar.gz"
    args:
      creates: "/results/{{ item }}"
    with_items: "{{ xps }}"

  - name: Extracting everything
    shell: "for i in $(ls /results/{{ item }}/*.tar.gz); do tar -C /results/{{ item }} -xzf $i; done"
    with_items: "{{ xps }}"

  - name: Starting influx container
    docker:
      name: "influx_{{ item.1 }}"
      detach: yes
      image: "tutum/influxdb:0.13"
      state: started
      ports: 
        - "{{ 8083 +  item.0 * 100 | int }}:8083"
        - "{{ 18086 +  item.0 * 100 | int }}:8086"
      volumes: "/results/{{ item.1 }}/influx-data:/data"
    with_indexed_items: "{{ xps }}"

  - name: Removing previous grafana container
    docker:
      image: "grafana/grafana:3.1.0"
      name: "grafana"
      state: absent

  - name: Starting grafana container
    docker:
      detach: yes
      image: "grafana/grafana:3.1.0"
      name: "grafana"
      ports: "3000:3000"
      state: started
  

  - name: Waiting for the grafana service to become available
    wait_for: 
      # we use the bridge interface of docker
      # instead of localhost
      # api is accessible on loopback too quickly and isn't ready
      host: "172.17.0.1"
      port: 3000
      state: started
      delay: 2
      timeout: 120

  - name: Add the influx cadvisor data source
    uri:
      url: "http://localhost:3000/api/datasources"
      user: admin
      password: admin
      force_basic_auth: yes
      body_format: json
      HEADER_Content-Type: application/json
      method: POST
      # we workaround this issue : 
      # https://github.com/ansible/ansible-modules-core/issues/265
      # by adding an empty space at the beginning of the json ...
      body: " { \"name\": \"cadvisor-{{ item.1 }}\", \"type\": \"influxdb\", \"url\": \"http://172.17.0.1:{{ 18086 + item.0 * 100 }}\", \"access\": \"proxy\", \"database\": \"cadvisor\", \"user\": \"root\", \"password\": \"root\", \"isDefault\": true }"
      status: 200,500
    with_indexed_items: "{{ xps }}"

  - name: Add the influx collectd data source
    uri:
      url: "http://localhost:3000/api/datasources"
      user: admin
      password: admin
      force_basic_auth: yes
      body_format: json
      HEADER_Content-Type: application/json
      method: POST
      # we workaround this issue : 
      # https://github.com/ansible/ansible-modules-core/issues/265
      # by adding an empty space at the beginning of the json ...
      body: " { \"name\": \"collectd-{{ item.1 }}\", \"type\": \"influxdb\", \"url\": \"http://172.17.0.1:{{ 18086 + item.0 * 100 }}\", \"access\": \"proxy\", \"database\": \"collectd\", \"user\": \"root\", \"password\": \"root\", \"isDefault\": true }"
      return_content: yes
      status: 200
    with_indexed_items: "{{ xps }}"

  - name: Coping the nginx configuration file
    copy: src="files/nginx.conf" dest="/nginx.conf"

  - name: Starting the nginx server container
    docker:
      detach: yes
      image: "nginx:alpine"
      name: "nginx"
      ports: "80:80"
      volumes:
        - "/results:/usr/share/nginx/html"
        - "/nginx.conf:/etc/nginx/nginx.conf"
      state: started


  
